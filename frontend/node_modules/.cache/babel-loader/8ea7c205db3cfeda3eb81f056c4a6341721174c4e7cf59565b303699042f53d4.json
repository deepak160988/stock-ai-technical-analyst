{"ast":null,"code":"import axios from 'axios';\n\n// Detect if we are in a Codespaces environment\nconst isCodespaces = Boolean(process.env.CODESPACES);\n\n// Base URL configuration\nconst baseURL = isCodespaces ? 'https://api.codespaces.example.com' : 'https://api.production.example.com';\n\n// Create an API client\nconst apiClient = axios.create({\n  baseURL,\n  timeout: 10000 // 10 seconds timeout\n});\n\n// Request/Response Interceptors\napiClient.interceptors.request.use(config => {\n  console.log('Making request to:', config.url);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\napiClient.interceptors.response.use(response => {\n  console.log('Response received:', response);\n  return response;\n}, error => {\n  console.error('Response error:', error);\n  return Promise.reject(error);\n});\n\n// API methods\nexport const getStockData = symbol => apiClient.get(`/stocks/${symbol}`);\nexport const getLatestPrice = symbol => apiClient.get(`/stocks/${symbol}/price`);\nexport const getIndicators = symbol => apiClient.get(`/stocks/${symbol}/indicators`);\nexport const getRSI = symbol => apiClient.get(`/stocks/${symbol}/rsi`);\nexport const getMACD = symbol => apiClient.get(`/stocks/${symbol}/macd`);\nexport const getSignals = symbol => apiClient.get(`/stocks/${symbol}/signals`);\nexport const getPortfolio = () => apiClient.get(`/portfolio`);\nexport const getIndianStocks = () => apiClient.get(`/stocks/indian`);\nexport const getMLPrediction = data => apiClient.post(`/ml/predict`, data);\n\n// Default export\nexport default apiClient;","map":{"version":3,"names":["axios","isCodespaces","Boolean","process","env","CODESPACES","baseURL","apiClient","create","timeout","interceptors","request","use","config","console","log","url","error","Promise","reject","response","getStockData","symbol","get","getLatestPrice","getIndicators","getRSI","getMACD","getSignals","getPortfolio","getIndianStocks","getMLPrediction","data","post"],"sources":["/workspaces/stock-ai-technical-analyst/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Detect if we are in a Codespaces environment\nconst isCodespaces = Boolean(process.env.CODESPACES);\n\n// Base URL configuration\nconst baseURL = isCodespaces ? 'https://api.codespaces.example.com' : 'https://api.production.example.com';\n\n// Create an API client\nconst apiClient = axios.create({\n    baseURL,\n    timeout: 10000, // 10 seconds timeout\n});\n\n// Request/Response Interceptors\napiClient.interceptors.request.use(config => {\n    console.log('Making request to:', config.url);\n    return config;\n}, error => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n});\n\napiClient.interceptors.response.use(response => {\n    console.log('Response received:', response);\n    return response;\n}, error => {\n    console.error('Response error:', error);\n    return Promise.reject(error);\n});\n\n// API methods\nexport const getStockData = (symbol) => apiClient.get(`/stocks/${symbol}`);\nexport const getLatestPrice = (symbol) => apiClient.get(`/stocks/${symbol}/price`);\nexport const getIndicators = (symbol) => apiClient.get(`/stocks/${symbol}/indicators`);\nexport const getRSI = (symbol) => apiClient.get(`/stocks/${symbol}/rsi`);\nexport const getMACD = (symbol) => apiClient.get(`/stocks/${symbol}/macd`);\nexport const getSignals = (symbol) => apiClient.get(`/stocks/${symbol}/signals`);\nexport const getPortfolio = () => apiClient.get(`/portfolio`);\nexport const getIndianStocks = () => apiClient.get(`/stocks/indian`);\nexport const getMLPrediction = (data) => apiClient.post(`/ml/predict`, data);\n\n// Default export\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;;AAEpD;AACA,MAAMC,OAAO,GAAGL,YAAY,GAAG,oCAAoC,GAAG,oCAAoC;;AAE1G;AACA,MAAMM,SAAS,GAAGP,KAAK,CAACQ,MAAM,CAAC;EAC3BF,OAAO;EACPG,OAAO,EAAE,KAAK,CAAE;AACpB,CAAC,CAAC;;AAEF;AACAF,SAAS,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACzCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAACG,GAAG,CAAC;EAC7C,OAAOH,MAAM;AACjB,CAAC,EAAEI,KAAK,IAAI;EACRH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAEFV,SAAS,CAACG,YAAY,CAACU,QAAQ,CAACR,GAAG,CAACQ,QAAQ,IAAI;EAC5CN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,QAAQ,CAAC;EAC3C,OAAOA,QAAQ;AACnB,CAAC,EAAEH,KAAK,IAAI;EACRH,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACvC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMI,YAAY,GAAIC,MAAM,IAAKf,SAAS,CAACgB,GAAG,CAAC,WAAWD,MAAM,EAAE,CAAC;AAC1E,OAAO,MAAME,cAAc,GAAIF,MAAM,IAAKf,SAAS,CAACgB,GAAG,CAAC,WAAWD,MAAM,QAAQ,CAAC;AAClF,OAAO,MAAMG,aAAa,GAAIH,MAAM,IAAKf,SAAS,CAACgB,GAAG,CAAC,WAAWD,MAAM,aAAa,CAAC;AACtF,OAAO,MAAMI,MAAM,GAAIJ,MAAM,IAAKf,SAAS,CAACgB,GAAG,CAAC,WAAWD,MAAM,MAAM,CAAC;AACxE,OAAO,MAAMK,OAAO,GAAIL,MAAM,IAAKf,SAAS,CAACgB,GAAG,CAAC,WAAWD,MAAM,OAAO,CAAC;AAC1E,OAAO,MAAMM,UAAU,GAAIN,MAAM,IAAKf,SAAS,CAACgB,GAAG,CAAC,WAAWD,MAAM,UAAU,CAAC;AAChF,OAAO,MAAMO,YAAY,GAAGA,CAAA,KAAMtB,SAAS,CAACgB,GAAG,CAAC,YAAY,CAAC;AAC7D,OAAO,MAAMO,eAAe,GAAGA,CAAA,KAAMvB,SAAS,CAACgB,GAAG,CAAC,gBAAgB,CAAC;AACpE,OAAO,MAAMQ,eAAe,GAAIC,IAAI,IAAKzB,SAAS,CAAC0B,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;;AAE5E;AACA,eAAezB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}