{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'https://api.example.com',\n  // replace with your API base URL\n  timeout: 1000\n});\nconst api = {\n  async getStockData(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/stocks/${stockSymbol}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n      throw error;\n    }\n  },\n  async getLatestPrice(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/stocks/${stockSymbol}/latest-price`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching latest price:', error);\n      throw error;\n    }\n  },\n  async getIndicators(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/stocks/${stockSymbol}/indicators`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching indicators:', error);\n      throw error;\n    }\n  },\n  async getRSI(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/stocks/${stockSymbol}/rsi`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching RSI:', error);\n      throw error;\n    }\n  },\n  async getMACD(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/stocks/${stockSymbol}/macd`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching MACD:', error);\n      throw error;\n    }\n  },\n  async getSignals(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/stocks/${stockSymbol}/signals`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching signals:', error);\n      throw error;\n    }\n  },\n  async getPortfolio(userId) {\n    try {\n      const response = await apiClient.get(`/users/${userId}/portfolio`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      throw error;\n    }\n  },\n  async getIndianStocks() {\n    try {\n      const response = await apiClient.get('/stocks/indian');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching Indian stocks:', error);\n      throw error;\n    }\n  },\n  async getMLPrediction(data) {\n    try {\n      const response = await apiClient.post('/ml/predict', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching ML prediction:', error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","apiClient","create","baseURL","timeout","api","getStockData","stockSymbol","response","get","data","error","console","getLatestPrice","getIndicators","getRSI","getMACD","getSignals","getPortfolio","userId","getIndianStocks","getMLPrediction","post"],"sources":["/workspaces/stock-ai-technical-analyst/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiClient = axios.create({\n    baseURL: 'https://api.example.com', // replace with your API base URL\n    timeout: 1000,\n});\n\nconst api = {\n    async getStockData(stockSymbol) {\n        try {\n            const response = await apiClient.get(`/stocks/${stockSymbol}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching stock data:', error);\n            throw error;\n        }\n    },\n\n    async getLatestPrice(stockSymbol) {\n        try {\n            const response = await apiClient.get(`/stocks/${stockSymbol}/latest-price`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching latest price:', error);\n            throw error;\n        }\n    },\n\n    async getIndicators(stockSymbol) {\n        try {\n            const response = await apiClient.get(`/stocks/${stockSymbol}/indicators`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching indicators:', error);\n            throw error;\n        }\n    },\n\n    async getRSI(stockSymbol) {\n        try {\n            const response = await apiClient.get(`/stocks/${stockSymbol}/rsi`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching RSI:', error);\n            throw error;\n        }\n    },\n\n    async getMACD(stockSymbol) {\n        try {\n            const response = await apiClient.get(`/stocks/${stockSymbol}/macd`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching MACD:', error);\n            throw error;\n        }\n    },\n\n    async getSignals(stockSymbol) {\n        try {\n            const response = await apiClient.get(`/stocks/${stockSymbol}/signals`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching signals:', error);\n            throw error;\n        }\n    },\n\n    async getPortfolio(userId) {\n        try {\n            const response = await apiClient.get(`/users/${userId}/portfolio`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching portfolio:', error);\n            throw error;\n        }\n    },\n\n    async getIndianStocks() {\n        try {\n            const response = await apiClient.get('/stocks/indian');\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching Indian stocks:', error);\n            throw error;\n        }\n    },\n\n    async getMLPrediction(data) {\n        try {\n            const response = await apiClient.post('/ml/predict', data);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching ML prediction:', error);\n            throw error;\n        }\n    },\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}