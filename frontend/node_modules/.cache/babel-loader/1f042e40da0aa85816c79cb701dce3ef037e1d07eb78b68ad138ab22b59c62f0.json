{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  // In Codespaces: set REACT_APP_API_BASE_URL to the forwarded 8000 URL (HTTPS),\n  // or leave empty to use relative paths with CRA proxy.\n  baseURL: process.env.REACT_APP_API_BASE_URL || '',\n  timeout: Number(process.env.REACT_APP_API_TIMEOUT || 15000)\n});\nconst api = {\n  async getStockData(stockSymbol, days = 365) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}`, {\n        params: {\n          days\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n      throw error;\n    }\n  },\n  async getLatestPrice(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/latest`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching latest price:', error);\n      throw error;\n    }\n  },\n  async getIndicators(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/indicators`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching indicators:', error);\n      throw error;\n    }\n  },\n  async getRSI(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/rsi`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching RSI:', error);\n      throw error;\n    }\n  },\n  async getMACD(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/macd`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching MACD:', error);\n      throw error;\n    }\n  },\n  async getSignals(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/signals`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching signals:', error);\n      throw error;\n    }\n  },\n  async getPortfolio(userId) {\n    try {\n      const response = await apiClient.get(`/api/users/${userId}/portfolio`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      throw error;\n    }\n  },\n  async getIndianStocks() {\n    try {\n      const response = await apiClient.get('/api/indian/stocks/list');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching Indian stocks:', error);\n      throw error;\n    }\n  },\n  async getMLPrediction(data) {\n    try {\n      const response = await apiClient.post('/api/ml/predict', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching ML prediction:', error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_BASE_URL","timeout","Number","REACT_APP_API_TIMEOUT","api","getStockData","stockSymbol","days","response","get","params","data","error","console","getLatestPrice","getIndicators","getRSI","getMACD","getSignals","getPortfolio","userId","getIndianStocks","getMLPrediction","post"],"sources":["/workspaces/stock-ai-technical-analyst/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiClient = axios.create({\n  // In Codespaces: set REACT_APP_API_BASE_URL to the forwarded 8000 URL (HTTPS),\n  // or leave empty to use relative paths with CRA proxy.\n  baseURL: process.env.REACT_APP_API_BASE_URL || '',\n  timeout: Number(process.env.REACT_APP_API_TIMEOUT || 15000),\n});\n\nconst api = {\n  async getStockData(stockSymbol, days = 365) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}`, { params: { days } });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n      throw error;\n    }\n  },\n\n  async getLatestPrice(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/latest`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching latest price:', error);\n      throw error;\n    }\n  },\n\n  async getIndicators(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/indicators`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching indicators:', error);\n      throw error;\n    }\n  },\n\n  async getRSI(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/rsi`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching RSI:', error);\n      throw error;\n    }\n  },\n\n  async getMACD(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/macd`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching MACD:', error);\n      throw error;\n    }\n  },\n\n  async getSignals(stockSymbol) {\n    try {\n      const response = await apiClient.get(`/api/stocks/${stockSymbol}/signals`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching signals:', error);\n      throw error;\n    }\n  },\n\n  async getPortfolio(userId) {\n    try {\n      const response = await apiClient.get(`/api/users/${userId}/portfolio`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      throw error;\n    }\n  },\n\n  async getIndianStocks() {\n    try {\n      const response = await apiClient.get('/api/indian/stocks/list');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching Indian stocks:', error);\n      throw error;\n    }\n  },\n\n  async getMLPrediction(data) {\n    try {\n      const response = await apiClient.post('/api/ml/predict', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching ML prediction:', error);\n      throw error;\n    }\n  },\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}