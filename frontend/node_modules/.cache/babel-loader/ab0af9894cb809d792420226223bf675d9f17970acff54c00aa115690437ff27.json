{"ast":null,"code":"var _jsxFileName = \"/workspaces/stock-ai-technical-analyst/frontend/src/components/MLPrediction.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MLPrediction({\n  symbol,\n  isIndianStock\n}) {\n  _s();\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const getCurrencyDisplay = () => {\n    if (isIndianStock) {\n      return {\n        symbol: 'â‚¹',\n        label: 'INR'\n      };\n    } else {\n      return {\n        symbol: '$',\n        label: 'USD'\n      };\n    }\n  };\n  const currency = getCurrencyDisplay();\n  const handlePredict = async () => {\n    setLoading(true);\n    // Simulate prediction\n    setTimeout(() => {\n      setPrediction({\n        nextDay: Math.random() * 100 + 100,\n        confidence: Math.random() * 30 + 70\n      });\n      setLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uD83E\\uDD16 ML Prediction - \", symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePredict,\n      disabled: loading,\n      className: \"predict-button\",\n      children: loading ? 'Predicting...' : 'Generate Prediction'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Next Day Prediction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \", currency.symbol, prediction.nextDay.toFixed(2), \" \", currency.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Confidence:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), \" \", prediction.confidence.toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"currency-note\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"\\uD83D\\uDCB1 Currency: \", isIndianStock ? 'Indian Rupee (â‚¹)' : 'US Dollar ($)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(MLPrediction, \"O9fE8QJGl4A6Ey6dXzaJOBFU/PI=\");\n_c = MLPrediction;\nexport default MLPrediction;\nvar _c;\n$RefreshReg$(_c, \"MLPrediction\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MLPrediction","symbol","isIndianStock","_s","prediction","setPrediction","loading","setLoading","getCurrencyDisplay","label","currency","handlePredict","setTimeout","nextDay","Math","random","confidence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toFixed","_c","$RefreshReg$"],"sources":["/workspaces/stock-ai-technical-analyst/frontend/src/components/MLPrediction.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction MLPrediction({ symbol, isIndianStock }) {\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getCurrencyDisplay = () => {\n    if (isIndianStock) {\n      return { symbol: 'â‚¹', label: 'INR' };\n    } else {\n      return { symbol: '$', label: 'USD' };\n    }\n  };\n\n  const currency = getCurrencyDisplay();\n\n  const handlePredict = async () => {\n    setLoading(true);\n    // Simulate prediction\n    setTimeout(() => {\n      setPrediction({\n        nextDay: Math.random() * 100 + 100,\n        confidence: Math.random() * 30 + 70\n      });\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"section\">\n      <h3>ðŸ¤– ML Prediction - {symbol}</h3>\n      <button onClick={handlePredict} disabled={loading} className=\"predict-button\">\n        {loading ? 'Predicting...' : 'Generate Prediction'}\n      </button>\n      \n      {prediction && (\n        <div className=\"prediction-result\">\n          <p>\n            <strong>Next Day Prediction:</strong> {currency.symbol}{prediction.nextDay.toFixed(2)} {currency.label}\n          </p>\n          <p>\n            <strong>Confidence:</strong> {prediction.confidence.toFixed(1)}%\n          </p>\n          <p className=\"currency-note\">\n            <small>ðŸ’± Currency: {isIndianStock ? 'Indian Rupee (â‚¹)' : 'US Dollar ($)'}</small>\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MLPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}