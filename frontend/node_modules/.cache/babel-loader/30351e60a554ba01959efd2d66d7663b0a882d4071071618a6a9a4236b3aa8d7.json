{"ast":null,"code":"var _jsxFileName = \"/workspaces/stock-ai-technical-analyst/frontend/src/components/StockChart.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockChart({\n  symbol,\n  data,\n  isIndianStock\n}) {\n  var _currency$price;\n  if (!data || !data.prices) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83D\\uDCCA Stock Chart - \", symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chart data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Determine currency symbol and label based on stock type\n  const getCurrencyDisplay = () => {\n    if (isIndianStock) {\n      return {\n        symbol: 'â‚¹',\n        label: 'INR',\n        price: data.current_price_inr || data.current_price\n      };\n    } else {\n      return {\n        symbol: '$',\n        label: 'USD',\n        price: data.current_price\n      };\n    }\n  };\n  const currency = getCurrencyDisplay();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uD83D\\uDCCA Stock Chart - \", symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"current-price\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \" \", currency.symbol, (_currency$price = currency.price) === null || _currency$price === void 0 ? void 0 : _currency$price.toFixed(2), \" \", currency.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Exchange:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \" \", isIndianStock ? 'ðŸ‡®ðŸ‡³ NSE' : 'ðŸ‡ºðŸ‡¸ NASDAQ/NYSE']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Data Points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \" \", data.data_points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), data.last_updated && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"last-updated\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Updated:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" \", new Date(data.last_updated).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StockChart","symbol","data","isIndianStock","_currency$price","prices","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getCurrencyDisplay","label","price","current_price_inr","current_price","currency","toFixed","data_points","last_updated","Date","toLocaleString","_c","$RefreshReg$"],"sources":["/workspaces/stock-ai-technical-analyst/frontend/src/components/StockChart.jsx"],"sourcesContent":["import React from 'react';\n\nfunction StockChart({ symbol, data, isIndianStock }) {\n  if (!data || !data.prices) {\n    return (\n      <div className=\"section-full\">\n        <h3>ðŸ“Š Stock Chart - {symbol}</h3>\n        <p>Loading chart data...</p>\n      </div>\n    );\n  }\n\n  // Determine currency symbol and label based on stock type\n  const getCurrencyDisplay = () => {\n    if (isIndianStock) {\n      return {\n        symbol: 'â‚¹',\n        label: 'INR',\n        price: data.current_price_inr || data.current_price\n      };\n    } else {\n      return {\n        symbol: '$',\n        label: 'USD',\n        price: data.current_price\n      };\n    }\n  };\n\n  const currency = getCurrencyDisplay();\n\n  return (\n    <div className=\"section-full\">\n      <h3>ðŸ“Š Stock Chart - {symbol}</h3>\n      <div className=\"stock-info\">\n        <p className=\"current-price\">\n          <strong>Current Price:</strong> {currency.symbol}{currency.price?.toFixed(2)} {currency.label}\n        </p>\n        <p>\n          <strong>Exchange:</strong> {isIndianStock ? 'ðŸ‡®ðŸ‡³ NSE' : 'ðŸ‡ºðŸ‡¸ NASDAQ/NYSE'}\n        </p>\n        <p>\n          <strong>Data Points:</strong> {data.data_points}\n        </p>\n        {data.last_updated && (\n          <p className=\"last-updated\">\n            <strong>Last Updated:</strong> {new Date(data.last_updated).toLocaleString()}\n          </p>\n        )}\n      </div>\n      {/* Chart will be rendered here with recharts */}\n    </div>\n  );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}