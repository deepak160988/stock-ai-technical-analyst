{"ast":null,"code":"import axios from 'axios';\nconst INDIAN_STOCKS = ['RELIANCE', 'TCS', 'HDFC', 'INFY', 'HINDUNILVR', 'ICICIBANK', 'SBIN', 'HCLTECH', 'ITC'];\nexport const isIndianStock = symbol => {\n  return INDIAN_STOCKS.includes(symbol);\n};\nexport const getApiBaseUrl = () => {\n  return 'https://api.example.com'; // Replace with actual base URL\n};\nconst api = {\n  async getStockData(symbol) {\n    try {\n      const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n      throw error;\n    }\n  },\n  async getLatestPrice(symbol) {\n    try {\n      const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/price`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching latest price:', error);\n      throw error;\n    }\n  },\n  async getIndicators(symbol) {\n    try {\n      const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/indicators`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching indicators:', error);\n      throw error;\n    }\n  },\n  async getRSI(symbol) {\n    try {\n      const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/rsi`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching RSI:', error);\n      throw error;\n    }\n  },\n  async getMACD(symbol) {\n    try {\n      const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/macd`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching MACD:', error);\n      throw error;\n    }\n  },\n  async getSignals(symbol) {\n    try {\n      const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/signals`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching signals:', error);\n      throw error;\n    }\n  },\n  async getPortfolio(userId) {\n    try {\n      const response = await axios.get(`${getApiBaseUrl()}/users/${userId}/portfolio`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      throw error;\n    }\n  },\n  async getIndianStocks() {\n    try {\n      return INDIAN_STOCKS;\n    } catch (error) {\n      console.error('Error fetching Indian stocks:', error);\n      throw error;\n    }\n  },\n  async getMLPrediction(data) {\n    try {\n      const response = await axios.post(`${getApiBaseUrl()}/ml/predict`, data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching ML prediction:', error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","INDIAN_STOCKS","isIndianStock","symbol","includes","getApiBaseUrl","api","getStockData","response","get","data","error","console","getLatestPrice","getIndicators","getRSI","getMACD","getSignals","getPortfolio","userId","getIndianStocks","getMLPrediction","post"],"sources":["/workspaces/stock-ai-technical-analyst/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst INDIAN_STOCKS = [\n    'RELIANCE', 'TCS', 'HDFC', 'INFY', 'HINDUNILVR',\n    'ICICIBANK', 'SBIN', 'HCLTECH', 'ITC'\n];\n\nexport const isIndianStock = (symbol) => {\n    return INDIAN_STOCKS.includes(symbol);\n};\n\nexport const getApiBaseUrl = () => {\n    return 'https://api.example.com'; // Replace with actual base URL\n};\n\nconst api = {\n    async getStockData(symbol) {\n        try {\n            const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching stock data:', error);\n            throw error;\n        }\n    },\n\n    async getLatestPrice(symbol) {\n        try {\n            const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/price`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching latest price:', error);\n            throw error;\n        }\n    },\n\n    async getIndicators(symbol) {\n        try {\n            const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/indicators`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching indicators:', error);\n            throw error;\n        }\n    },\n\n    async getRSI(symbol) {\n        try {\n            const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/rsi`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching RSI:', error);\n            throw error;\n        }\n    },\n\n    async getMACD(symbol) {\n        try {\n            const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/macd`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching MACD:', error);\n            throw error;\n        }\n    },\n\n    async getSignals(symbol) {\n        try {\n            const response = await axios.get(`${getApiBaseUrl()}/stocks/${symbol}/signals`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching signals:', error);\n            throw error;\n        }\n    },\n\n    async getPortfolio(userId) {\n        try {\n            const response = await axios.get(`${getApiBaseUrl()}/users/${userId}/portfolio`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching portfolio:', error);\n            throw error;\n        }\n    },\n\n    async getIndianStocks() {\n        try {\n            return INDIAN_STOCKS;\n        } catch (error) {\n            console.error('Error fetching Indian stocks:', error);\n            throw error;\n        }\n    },\n\n    async getMLPrediction(data) {\n        try {\n            const response = await axios.post(`${getApiBaseUrl()}/ml/predict`, data);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching ML prediction:', error);\n            throw error;\n        }\n    }\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}