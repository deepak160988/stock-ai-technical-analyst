{"ast":null,"code":"// Environment detection logic\nconst isDevelopment = window.location.hostname === 'localhost';\n\n// Function to detect if the stock is Indian\nfunction isIndianStock(stockSymbol) {\n  // Assuming Indian stocks are represented by their corresponding indices\n  const indianStockIndices = ['NSE', 'BSE']; // Add more indices if needed\n  return indianStockIndices.some(index => stockSymbol.includes(index));\n}\n\n// Function to route stocks correctly based on the environment\nfunction routeStock(stockSymbol) {\n  if (isDevelopment) {\n    // Logic for development environment\n    console.log(`Routing for development: ${stockSymbol}`);\n    return `/dev/stocks/${stockSymbol}`;\n  } else {\n    // Logic for production environment\n    console.log(`Routing for production: ${stockSymbol}`);\n    return `/prod/stocks/${stockSymbol}`;\n  }\n}\n\n// Sample usage\nconst stockSymbol = 'NSE:RELIANCE'; // Example stock symbol\nif (isIndianStock(stockSymbol)) {\n  const route = routeStock(stockSymbol);\n  console.log(`Stock route: ${route}`);\n} else {\n  console.log(`Stock ${stockSymbol} is not an Indian stock.`);\n}","map":{"version":3,"names":["isDevelopment","window","location","hostname","isIndianStock","stockSymbol","indianStockIndices","some","index","includes","routeStock","console","log","route"],"sources":["/workspaces/stock-ai-technical-analyst/frontend/src/services/api.js"],"sourcesContent":["// Environment detection logic\nconst isDevelopment = window.location.hostname === 'localhost';\n\n// Function to detect if the stock is Indian\nfunction isIndianStock(stockSymbol) {\n    // Assuming Indian stocks are represented by their corresponding indices\n    const indianStockIndices = ['NSE', 'BSE']; // Add more indices if needed\n    return indianStockIndices.some(index => stockSymbol.includes(index));\n}\n\n// Function to route stocks correctly based on the environment\nfunction routeStock(stockSymbol) {\n    if (isDevelopment) {\n        // Logic for development environment\n        console.log(`Routing for development: ${stockSymbol}`);\n        return `/dev/stocks/${stockSymbol}`;\n    } else {\n        // Logic for production environment\n        console.log(`Routing for production: ${stockSymbol}`);\n        return `/prod/stocks/${stockSymbol}`;\n    }\n}\n\n// Sample usage\nconst stockSymbol = 'NSE:RELIANCE'; // Example stock symbol\nif (isIndianStock(stockSymbol)) {\n    const route = routeStock(stockSymbol);\n    console.log(`Stock route: ${route}`);\n} else {\n    console.log(`Stock ${stockSymbol} is not an Indian stock.`);\n}"],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW;;AAE9D;AACA,SAASC,aAAaA,CAACC,WAAW,EAAE;EAChC;EACA,MAAMC,kBAAkB,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;EAC3C,OAAOA,kBAAkB,CAACC,IAAI,CAACC,KAAK,IAAIH,WAAW,CAACI,QAAQ,CAACD,KAAK,CAAC,CAAC;AACxE;;AAEA;AACA,SAASE,UAAUA,CAACL,WAAW,EAAE;EAC7B,IAAIL,aAAa,EAAE;IACf;IACAW,OAAO,CAACC,GAAG,CAAC,4BAA4BP,WAAW,EAAE,CAAC;IACtD,OAAO,eAAeA,WAAW,EAAE;EACvC,CAAC,MAAM;IACH;IACAM,OAAO,CAACC,GAAG,CAAC,2BAA2BP,WAAW,EAAE,CAAC;IACrD,OAAO,gBAAgBA,WAAW,EAAE;EACxC;AACJ;;AAEA;AACA,MAAMA,WAAW,GAAG,cAAc,CAAC,CAAC;AACpC,IAAID,aAAa,CAACC,WAAW,CAAC,EAAE;EAC5B,MAAMQ,KAAK,GAAGH,UAAU,CAACL,WAAW,CAAC;EACrCM,OAAO,CAACC,GAAG,CAAC,gBAAgBC,KAAK,EAAE,CAAC;AACxC,CAAC,MAAM;EACHF,OAAO,CAACC,GAAG,CAAC,SAASP,WAAW,0BAA0B,CAAC;AAC/D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}